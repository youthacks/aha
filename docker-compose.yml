version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aha-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aha
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aha-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aha-backend
    ports:
      - "3000:3000"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: aha
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER:-your-email@gmail.com}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-your-email-password}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@aha-system.com}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8080}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aha-network
    restart: unless-stopped

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: aha-frontend
    ports:
      - "8080:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
    depends_on:
      - backend
    networks:
      - aha-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  aha-network:
    driver: bridge

