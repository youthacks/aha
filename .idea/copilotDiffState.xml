<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/DELETE_DATA_COMMANDS.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/DELETE_DATA_COMMANDS.md" />
              <option name="updatedContent" value="# Quick Commands - Delete All Data&#10;&#10;## Delete All User Accounts&#10;&#10;**PowerShell:**&#10;```powershell&#10;Invoke-RestMethod -Uri &quot;http://localhost:3000/users/clear-all&quot; -Method DELETE&#10;```&#10;&#10;**Output:**&#10;```json&#10;{&#10;  &quot;message&quot;: &quot;Successfully deleted X user(s)&quot;,&#10;  &quot;success&quot;: true&#10;}&#10;```&#10;&#10;---&#10;&#10;## List All Users (Before Deleting)&#10;&#10;**PowerShell:**&#10;```powershell&#10;Invoke-RestMethod -Uri &quot;http://localhost:3000/users/list&quot; -Method GET&#10;```&#10;&#10;**Output:**&#10;```json&#10;{&#10;  &quot;count&quot;: 5,&#10;  &quot;users&quot;: [&#10;    { &quot;id&quot;: &quot;...&quot;, &quot;email&quot;: &quot;user@example.com&quot;, ... }&#10;  ]&#10;}&#10;```&#10;&#10;---&#10;&#10;## Delete All Events and Event Data&#10;&#10;Currently, events are tied to users through the database. When you delete all users, the events remain but become orphaned.&#10;&#10;**Option 1: Delete via SQL (Recommended)**&#10;&#10;Open pgAdmin and run:&#10;```sql&#10;DELETE FROM transactions;&#10;DELETE FROM buying_stations;&#10;DELETE FROM event_members;&#10;DELETE FROM events;&#10;```&#10;&#10;**Option 2: Delete via psql Command Line**&#10;```bash&#10;psql -U postgres -d aha_v2 -c &quot;DELETE FROM transactions; DELETE FROM buying_stations; DELETE FROM event_members; DELETE FROM events;&quot;&#10;```&#10;&#10;**Option 3: Recreate Entire Database**&#10;```bash&#10;psql -U postgres -c &quot;DROP DATABASE aha_v2; CREATE DATABASE aha_v2;&quot;&#10;```&#10;Then restart your backend server - it will recreate all tables automatically.&#10;&#10;---&#10;&#10;## Complete Reset (Everything)&#10;&#10;**Delete ALL data and start fresh:**&#10;&#10;```bash&#10;psql -U postgres -c &quot;DROP DATABASE aha_v2; CREATE DATABASE aha_v2;&quot;&#10;```&#10;&#10;Then restart backend:&#10;```bash&#10;npm run start:dev&#10;```&#10;&#10;All tables will be recreated empty.&#10;&#10;---&#10;&#10;## Notes&#10;&#10;⚠️ **Warning:** These actions are permanent and cannot be undone!&#10;&#10; **Security:** The `/users/clear-all` endpoint only works in development mode (NODE_ENV=development)&#10;&#10; **Backup:** Consider backing up your database first:&#10;```bash&#10;pg_dump -U postgres aha_v2 &gt; backup_$(date +%Y%m%d).sql&#10;```&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/EMAIL_CONFIG.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/EMAIL_CONFIG.md" />
              <option name="updatedContent" value="# Email Configuration Notes&#10;&#10;## Current Setup&#10;&#10;The backend sends verification and password reset emails with links that point to:&#10;`http://192.168.1.198:3001`&#10;&#10;This is configured in the `.env` file as `APP_URL`.&#10;&#10;## Why This Works&#10;&#10;- ✅ **Web App**: Works because you can access it at `http://192.168.1.198:3001` from any device on your network&#10;- ✅ **Mobile App**: The mobile app will handle the deep linking when you click email links on your phone&#10;&#10;## Important Notes&#10;&#10;1. **Web App Access**: If you want to access the web app from your phone's browser, use:&#10;   ```&#10;   http://192.168.1.198:3001&#10;   ```&#10;   Instead of `http://localhost:3001`&#10;&#10;2. **Email Links on Mobile**: When you click a verification link in the email on your phone:&#10;   - It will try to open in the browser first&#10;   - You can manually trigger the verification in the mobile app by copying the email and token from the URL&#10;&#10;## Alternative: Deep Linking (Future Enhancement)&#10;&#10;For a better mobile experience, you could configure deep linking so email links automatically open in the mobile app. This requires:&#10;1. Configuring Expo deep links&#10;2. Updating the email service to detect mobile users&#10;3. Sending different links for mobile vs web&#10;&#10;For now, the current setup works for both platforms when on the same network.&#10;&#10;## If Your IP Changes&#10;&#10;Remember to update `APP_URL` in `.env` if your computer's IP address changes:&#10;1. Run `ipconfig` to get your new IP&#10;2. Update `.env`: `APP_URL=http://YOUR_NEW_IP:3001`&#10;3. Restart the backend server&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/migrate-admin-to-owner.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/migrate-admin-to-owner.js" />
              <option name="originalContent" value="const { DataSource } = require('typeorm');&#10;&#10;const AppDataSource = new DataSource({&#10;  type: 'postgres',&#10;  host: process.env.DB_HOST || 'localhost',&#10;  port: parseInt(process.env.DB_PORT || '5432'),&#10;  username: process.env.DB_USERNAME || 'postgres',&#10;  password: process.env.DB_PASSWORD || 'postgres',&#10;  database: process.env.DB_DATABASE || 'aha_v2',&#10;});&#10;&#10;async function migrateAdminToOwner() {&#10;  try {&#10;    console.log('Connecting to database...');&#10;    await AppDataSource.initialize();&#10;    console.log('Connected successfully!');&#10;&#10;    console.log('Adding owner to enum type...');&#10;    try {&#10;      await AppDataSource.query(&#10;        `ALTER TYPE event_members_role_enum ADD VALUE IF NOT EXISTS 'owner'`&#10;      );&#10;      console.log('✓ Added owner to enum type');&#10;    } catch (err) {&#10;      console.log('Note: owner value might already exist in enum');&#10;    }&#10;&#10;    console.log('Updating admin roles to owner in data...');&#10;    const updateResult = await AppDataSource.query(&#10;      `UPDATE event_members SET role = 'owner' WHERE role = 'admin'`&#10;    );&#10;    console.log(`✓ Updated ${updateResult[1]} record(s) from 'admin' to 'owner'`);&#10;&#10;    console.log('Removing admin from enum type...');&#10;&#10;    await AppDataSource.query(`&#10;      ALTER TABLE event_members ALTER COLUMN role DROP DEFAULT;&#10;    `);&#10;    console.log('✓ Dropped default constraint');&#10;&#10;    await AppDataSource.query(`&#10;      CREATE TYPE event_members_role_enum_new AS ENUM ('member', 'manager', 'owner');&#10;      &#10;      ALTER TABLE event_members &#10;        ALTER COLUMN role TYPE event_members_role_enum_new &#10;        USING role::text::event_members_role_enum_new;&#10;      &#10;      DROP TYPE event_members_role_enum;&#10;      &#10;      ALTER TYPE event_members_role_enum_new RENAME TO event_members_role_enum;&#10;    `);&#10;    console.log('✓ Enum type updated successfully');&#10;&#10;    await AppDataSource.query(`&#10;      ALTER TABLE event_members ALTER COLUMN role SET DEFAULT 'member'::event_members_role_enum;&#10;    `);&#10;    console.log('✓ Restored default constraint');&#10;&#10;    await AppDataSource.destroy();&#10;    console.log('\n✅ Migration completed successfully!');&#10;    console.log('You can now restart your NestJS application.');&#10;    process.exit(0);&#10;  } catch (error) {&#10;    console.error('\n❌ Migration failed:', error);&#10;    console.error('\nPlease check the error message above and try again.');&#10;    await AppDataSource.destroy().catch(() =&gt; {});&#10;    process.exit(1);&#10;  }&#10;}&#10;&#10;migrateAdminToOwner();&#10;" />
              <option name="updatedContent" value="const { DataSource } = require('typeorm');&#10;&#10;const AppDataSource = new DataSource({&#10;  type: 'postgres',&#10;  host: process.env.DB_HOST || 'localhost',&#10;  port: parseInt(process.env.DB_PORT || '5432'),&#10;  username: process.env.DB_USERNAME || 'postgres',&#10;  password: process.env.DB_PASSWORD || 'postgres',&#10;  database: process.env.DB_DATABASE || 'aha',&#10;});&#10;&#10;async function migrateAdminToOwner() {&#10;  try {&#10;    console.log('Connecting to database...');&#10;    await AppDataSource.initialize();&#10;    console.log('Connected successfully!');&#10;&#10;    console.log('Adding owner to enum type...');&#10;    try {&#10;      await AppDataSource.query(&#10;        `ALTER TYPE event_members_role_enum ADD VALUE IF NOT EXISTS 'owner'`&#10;      );&#10;      console.log('✓ Added owner to enum type');&#10;    } catch (err) {&#10;      console.log('Note: owner value might already exist in enum');&#10;    }&#10;&#10;    console.log('Updating admin roles to owner in data...');&#10;    const updateResult = await AppDataSource.query(&#10;      `UPDATE event_members SET role = 'owner' WHERE role = 'admin'`&#10;    );&#10;    console.log(`✓ Updated ${updateResult[1]} record(s) from 'admin' to 'owner'`);&#10;&#10;    console.log('Removing admin from enum type...');&#10;&#10;    await AppDataSource.query(`&#10;      ALTER TABLE event_members ALTER COLUMN role DROP DEFAULT;&#10;    `);&#10;    console.log('✓ Dropped default constraint');&#10;&#10;    await AppDataSource.query(`&#10;      CREATE TYPE event_members_role_enum_new AS ENUM ('member', 'manager', 'owner');&#10;      &#10;      ALTER TABLE event_members &#10;        ALTER COLUMN role TYPE event_members_role_enum_new &#10;        USING role::text::event_members_role_enum_new;&#10;      &#10;      DROP TYPE event_members_role_enum;&#10;      &#10;      ALTER TYPE event_members_role_enum_new RENAME TO event_members_role_enum;&#10;    `);&#10;    console.log('✓ Enum type updated successfully');&#10;&#10;    await AppDataSource.query(`&#10;      ALTER TABLE event_members ALTER COLUMN role SET DEFAULT 'member'::event_members_role_enum;&#10;    `);&#10;    console.log('✓ Restored default constraint');&#10;&#10;    await AppDataSource.destroy();&#10;    console.log('\n✅ Migration completed successfully!');&#10;    console.log('You can now restart your NestJS application.');&#10;    process.exit(0);&#10;  } catch (error) {&#10;    console.error('\n❌ Migration failed:', error);&#10;    console.error('\nPlease check the error message above and try again.');&#10;    await AppDataSource.destroy().catch(() =&gt; {});&#10;    process.exit(1);&#10;  }&#10;}&#10;&#10;migrateAdminToOwner();" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/package.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/package.json" />
              <option name="originalContent" value="{&#10;  &quot;name&quot;: &quot;aha-token-system&quot;,&#10;  &quot;version&quot;: &quot;1.0.0&quot;,&#10;  &quot;description&quot;: &quot;AHA - Token System&quot;,&#10;  &quot;author&quot;: &quot;&quot;,&#10;  &quot;private&quot;: true,&#10;  &quot;license&quot;: &quot;MIT&quot;,&#10;  &quot;scripts&quot;: {&#10;    &quot;build&quot;: &quot;nest build&quot;,&#10;    &quot;start&quot;: &quot;nest start&quot;,&#10;    &quot;start:dev&quot;: &quot;nest start --watch&quot;,&#10;    &quot;start:prod&quot;: &quot;node dist/main&quot;,&#10;    &quot;lint&quot;: &quot;eslint \&quot;{src,apps,libs,test}/**/*.ts\&quot; --fix&quot;,&#10;    &quot;typeorm&quot;: &quot;typeorm-ts-node-commonjs&quot;,&#10;    &quot;db:reset&quot;: &quot;psql -U postgres -c \&quot;DROP DATABASE IF EXISTS aha_v2;\&quot; &amp;&amp; psql -U postgres -c \&quot;CREATE DATABASE aha_v2;\&quot;&quot;&#10;  },&#10;  &quot;dependencies&quot;: {&#10;    &quot;@nestjs/common&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/config&quot;: &quot;^3.0.0&quot;,&#10;    &quot;@nestjs/core&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/jwt&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/passport&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/platform-express&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/typeorm&quot;: &quot;^10.0.0&quot;,&#10;    &quot;bcrypt&quot;: &quot;^5.1.1&quot;,&#10;    &quot;class-transformer&quot;: &quot;^0.5.1&quot;,&#10;    &quot;class-validator&quot;: &quot;^0.14.0&quot;,&#10;    &quot;nodemailer&quot;: &quot;^7.0.6&quot;,&#10;    &quot;passport&quot;: &quot;^0.6.0&quot;,&#10;    &quot;passport-jwt&quot;: &quot;^4.0.1&quot;,&#10;    &quot;passport-local&quot;: &quot;^1.0.0&quot;,&#10;    &quot;pg&quot;: &quot;^8.11.0&quot;,&#10;    &quot;reflect-metadata&quot;: &quot;^0.1.13&quot;,&#10;    &quot;rxjs&quot;: &quot;^7.8.1&quot;,&#10;    &quot;typeorm&quot;: &quot;^0.3.17&quot;&#10;  },&#10;  &quot;devDependencies&quot;: {&#10;    &quot;@nestjs/cli&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@nestjs/schematics&quot;: &quot;^10.0.0&quot;,&#10;    &quot;@types/bcrypt&quot;: &quot;^5.0.0&quot;,&#10;    &quot;@types/express&quot;: &quot;^4.17.17&quot;,&#10;    &quot;@types/node&quot;: &quot;^20.3.1&quot;,&#10;    &quot;@types/nodemailer&quot;: &quot;^7.0.2&quot;,&#10;    &quot;@types/passport-jwt&quot;: &quot;^3.0.9&quot;,&#10;    &quot;@types/passport-local&quot;: &quot;^1.0.35&quot;,&#10;    &quot;@typescript-eslint/eslint-plugin&quot;: &quot;^6.0.0&quot;,&#10;    &quot;@typescript-eslint/parser&quot;: &quot;^6.0.0&quot;,&#10;    &quot;eslint&quot;: &quot;^8.42.0&quot;,&#10;    &quot;ts-node&quot;: &quot;^10.9.1&quot;,&#10;    &quot;typescript&quot;: &quot;^5.1.3&quot;&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="{&#13;&#10;  &quot;name&quot;: &quot;aha-token-system&quot;,&#13;&#10;  &quot;version&quot;: &quot;1.0.0&quot;,&#13;&#10;  &quot;description&quot;: &quot;AHA - Token System&quot;,&#13;&#10;  &quot;author&quot;: &quot;&quot;,&#13;&#10;  &quot;private&quot;: true,&#13;&#10;  &quot;license&quot;: &quot;MIT&quot;,&#13;&#10;  &quot;scripts&quot;: {&#13;&#10;    &quot;build&quot;: &quot;nest build&quot;,&#13;&#10;    &quot;start&quot;: &quot;nest start&quot;,&#13;&#10;    &quot;start:dev&quot;: &quot;nest start --watch&quot;,&#13;&#10;    &quot;start:prod&quot;: &quot;node dist/main&quot;,&#13;&#10;    &quot;lint&quot;: &quot;eslint \&quot;{src,apps,libs,test}/**/*.ts\&quot; --fix&quot;,&#13;&#10;    &quot;typeorm&quot;: &quot;typeorm-ts-node-commonjs&quot;,&#13;&#10;    &quot;db:reset&quot;: &quot;psql -U postgres -c \&quot;DROP DATABASE IF EXISTS aha;\&quot; &amp;&amp; psql -U postgres -c \&quot;CREATE DATABASE aha;\&quot;&quot;&#13;&#10;  },&#13;&#10;  &quot;dependencies&quot;: {&#13;&#10;    &quot;@nestjs/common&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/config&quot;: &quot;^3.0.0&quot;,&#13;&#10;    &quot;@nestjs/core&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/jwt&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/passport&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/platform-express&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/typeorm&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;bcrypt&quot;: &quot;^5.1.1&quot;,&#13;&#10;    &quot;class-transformer&quot;: &quot;^0.5.1&quot;,&#13;&#10;    &quot;class-validator&quot;: &quot;^0.14.0&quot;,&#13;&#10;    &quot;nodemailer&quot;: &quot;^7.0.6&quot;,&#13;&#10;    &quot;passport&quot;: &quot;^0.6.0&quot;,&#13;&#10;    &quot;passport-jwt&quot;: &quot;^4.0.1&quot;,&#13;&#10;    &quot;passport-local&quot;: &quot;^1.0.0&quot;,&#13;&#10;    &quot;pg&quot;: &quot;^8.11.0&quot;,&#13;&#10;    &quot;reflect-metadata&quot;: &quot;^0.1.13&quot;,&#13;&#10;    &quot;rxjs&quot;: &quot;^7.8.1&quot;,&#13;&#10;    &quot;typeorm&quot;: &quot;^0.3.17&quot;&#13;&#10;  },&#13;&#10;  &quot;devDependencies&quot;: {&#13;&#10;    &quot;@nestjs/cli&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@nestjs/schematics&quot;: &quot;^10.0.0&quot;,&#13;&#10;    &quot;@types/bcrypt&quot;: &quot;^5.0.0&quot;,&#13;&#10;    &quot;@types/express&quot;: &quot;^4.17.17&quot;,&#13;&#10;    &quot;@types/node&quot;: &quot;^20.3.1&quot;,&#13;&#10;    &quot;@types/nodemailer&quot;: &quot;^7.0.2&quot;,&#13;&#10;    &quot;@types/passport-jwt&quot;: &quot;^3.0.9&quot;,&#13;&#10;    &quot;@types/passport-local&quot;: &quot;^1.0.35&quot;,&#13;&#10;    &quot;@typescript-eslint/eslint-plugin&quot;: &quot;^6.0.0&quot;,&#13;&#10;    &quot;@typescript-eslint/parser&quot;: &quot;^6.0.0&quot;,&#13;&#10;    &quot;eslint&quot;: &quot;^8.42.0&quot;,&#13;&#10;    &quot;ts-node&quot;: &quot;^10.9.1&quot;,&#13;&#10;    &quot;typescript&quot;: &quot;^5.1.3&quot;&#13;&#10;  }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>